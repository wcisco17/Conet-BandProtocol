{"version":3,"file":"static/webpack/static/development/pages/index.js.7ad11591c83616028ea5.hot-update.js","sources":["webpack:///./src/models/index.tsx"],"sourcesContent":["import { BandProtocolClient } from 'band.js';\nimport CommunityClient from 'band.js/dist/services/CommunityClient';\nimport * as React from 'react';\nimport { Fragment, useEffect, useState } from 'react';\nimport { OnBoardOne, OnBoardTwo } from './Home';\n\nconst useBandClient = (clients: any, communityTitle: string, communitySymbol: string) => {\n    const [community, setCommunity] = useState<CommunityClient>(clients);\n    const [title, setTitle] = useState('');\n    const [symbol, setSymbol] = useState('');\n\n    const bandProtocolCreateCommunity = async (): Promise<any> => {\n        // Set Protocol Provider\n        const bandClient = await BandProtocolClient.make({ provider: window.web3.currentProvider, });\n\n        // Create community client\n        const communityClient = await bandClient.createCommunity({\n            name: title, \n            symbol: symbol, \n            bonding: {\n                collateralEquation: [\"8\", \"1\", \"0\", \"2\"], \n                liquiditySpread: \"30000000000000000\" \n            },\n            params: {\n                expirationTime: \"300\", \n                minParticipationPct: \"10000000000000000\", \n                supportRequiredPct: \"800000000000000000\" \n            }\n        });\n\n        setTitle(communityTitle);\n        setSymbol(communitySymbol);\n        setCommunity(communityClient);\n    }\n\n    useEffect(() => {\n        bandProtocolCreateCommunity()\n    }, []);\n\n    return {\n        community,\n    }\n}\n\n\nexport default () => {\n    const [boarding, setOnboarding] = useState(1);\n    const { community } = useBandClient({}, \"My title\", \"MP\");\n\n    console.log(community);\n\n    return (\n        <Fragment>\n            {\n                boarding === 1 && (\n                    <OnBoardOne\n                        onClick={() => {\n                            setOnboarding(2)\n                        }}\n                    />\n                )\n            }\n\n            {\n                boarding === 2 && (\n                    <OnBoardTwo />\n                )\n            }\n        </Fragment>\n    )\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAHA;AAEA;AAFA;AAAA;AAMA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAPA;AACA;AANA;AAKA;AAcA;AACA;AACA;AACA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAuBA;AACA;AACA;AAEA;AACA;AADA;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;A","sourceRoot":""}