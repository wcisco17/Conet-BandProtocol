{"version":3,"file":"static/webpack/static/development/pages/index.js.eb144283f6a1d5e2365a.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import { BandProtocolClient } from 'band.js';\nimport * as React from 'react';\nimport Web3 from 'web3';\nimport { Wrapper } from '../src/components/Container';\nimport Home from '../src/models';\n\nconst web3 = new Web3(Web3.givenProvider || \"http://127.0.0.1:7545\");\nweb3.eth.getAccounts().then((e) => console.log('ACCOUNTS', e));\n\nif (web3.eth.accounts) {\n    console.log(web3.eth.accounts[0]);\n    \n} else {\n    console.log('LOCVKED');\n    \n}\n\nconst a = async () => {\n\n    let bandClient = await BandProtocolClient.make({ provider: window.web3.currentProvider, })\n\n    const a = await bandClient.createCommunity({\n        name: \"Example Community\", // ERC-20 community token name\n        symbol: \"XEC\", // ERC-20 community token symbol\n        bonding: {\n            collateralEquation: [\"8\", \"1\", \"0\", \"2\"], // x^2\n            liquiditySpread: \"30000000000000000\" // 3%\n        },\n        params: {\n            expirationTime: \"300\", // 5 minutes\n            minParticipationPct: \"10000000000000000\", // 1%\n            supportRequiredPct: \"800000000000000000\" // 80%\n        }\n    })\n\n    console.log(a);\n    return a\n}\n\nconsole.log(a())\n\n\nexport default (props: any): React.ReactNode => {\n\n    return (\n        <Wrapper>\n            <Home />\n        </Wrapper>\n    );\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAHA;AAEA;AAFA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAHA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAJA;AAPA;AACA;AALA;AAIA;AAcA;AAlBA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAqBA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;A","sourceRoot":""}