{"version":3,"file":"static/webpack/static/development/pages/index.js.370a052f6fbeaef3f971.hot-update.js","sources":["webpack:///./pages/index.tsx","webpack:///./src/models/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Wrapper } from '../src/components/Container';\nimport Home from '../src/models';\n\n// const a = async () => {\n\n//     let bandClient = await BandProtocolClient.make({ provider: window.web3.currentProvider, })\n\n//     const a = await bandClient.createCommunity({\n//         name: \"Example Community\", // ERC-20 community token name\n//         symbol: \"XEC\", // ERC-20 community token symbol\n//         bonding: {\n//             collateralEquation: [\"8\", \"1\", \"0\", \"2\"], // x^2\n//             liquiditySpread: \"30000000000000000\" // 3%\n//         },\n//         params: {\n//             expirationTime: \"300\", // 5 minutes\n//             minParticipationPct: \"10000000000000000\", // 1%\n//             supportRequiredPct: \"800000000000000000\" // 80%\n//         }\n//     })\n\n//     return a\n// }\n\n// a().then((r) => {\n//     console.log('INSIDE R: ', r.parameter())\n// }).then((re) => {\n//     console.log('DEEP INSIDE RR', re);\n\n// })\n\n\n\n\nexport default (props: any): React.ReactNode => {\n\n    return (\n        <Wrapper>\n            <Home />\n        </Wrapper>\n    );\n}","import { BandProtocolClient } from 'band.js';\nimport * as React from 'react';\nimport { Fragment, useEffect, useState } from 'react';\nimport { OnBoardOne, OnBoardTwo } from './Home';\n\nconst useBandClient = (clients: any) => {\n    const [client, setClient] = useState<BandProtocolClient>(clients);\n\n    useEffect(() => {\n        loadBandProtocol()\n    }, []);\n\n    const loadBandProtocol = async () => {\n        const bandClient = await BandProtocolClient.make({ provider: window.web3.currentProvider, })\n        setClient(bandClient)\n    }\n\n    return {\n        client,\n    }\n}\n\nconst useCreateCommunity = (communies: any) => {\n    const { client } = useBandClient({});\n\n    const [community, setCommunity] = useState(communies);\n\n    useEffect(() => {\n        loadBandProtocol()\n            .then((res: any) => {\n                setCommunity(res);\n            })\n    }, []);\n\n    const loadBandProtocol = async () => {\n        const communityClient = await client.createCommunity({\n            name: \"Example Community\", // ERC-20 community token name\n            symbol: \"XEC\", // ERC-20 community token symbol\n            bonding: {\n                collateralEquation: [\"8\", \"1\", \"0\", \"2\"], // x^2\n                liquiditySpread: \"30000000000000000\" // 3%\n            },\n            params: {\n                expirationTime: \"300\", // 5 minutes\n                minParticipationPct: \"10000000000000000\", // 1%\n                supportRequiredPct: \"800000000000000000\" // 80%\n            }\n        })\n        return communityClient;\n    }\n\n    return {\n        community\n    }\n}\n\nexport default () => {\n    const [boarding, setOnboarding] = useState(1);\n    const { community } = useCreateCommunity({});\n\n    console.log(community);\n\n    return (\n        <Fragment>\n            {\n                boarding === 1 && (\n                    <OnBoardOne\n                        onClick={() => {\n                            setOnboarding(2)\n                        }}\n                    />\n                )\n            }\n\n            {\n                boarding === 2 && (\n                    <OnBoardTwo />\n                )\n            }\n        </Fragment>\n    )\n}"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAHA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAJA;AAPA;AACA;AAFA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAgBA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;A","sourceRoot":""}