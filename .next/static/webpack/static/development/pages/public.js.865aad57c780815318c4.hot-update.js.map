{"version":3,"file":"static/webpack/static/development/pages/public.js.865aad57c780815318c4.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./pages/public.tsx"],"sourcesContent":["import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import Link from 'next/link';\nimport * as React from 'react';\nimport { useCreateCommunity } from '../src/assets/helper/index';\nimport { theme } from '../src/assets/styles/mainStyles';\nimport Box from '../src/components/Box';\nimport { Wrapper } from '../src/components/Container';\n\ninterface IProps {\n    query?: {\n        title: string;\n        symbol: string;\n    }\n}\n\nexport default class extends React.PureComponent<IProps> {\n    static getInitialProps({ query }: any) {\n        return { query }\n    }\n\n    isUndefined = () => (\n        <Link href='/'>\n            <h3 style={{ color: theme.colors.primary, cursor: 'pointer' }} >\n                Go back Home to create a community\n            </h3>\n        </Link>\n    )\n\n    render() {\n        const { title, symbol } = this.props.query;\n        if (typeof title === 'undefined' || typeof symbol === 'undefined') {\n            this.isUndefined()\n        }\n        return (\n            <Wrapper>\n                {\n                    title.length <= 0 || symbol.length <= 0\n                        ? this.isUndefined() : (\n                            <Community\n                                title={title}\n                                symbol={symbol}\n                            />\n                        )\n                }\n            </Wrapper>\n        )\n    }\n}\n\n\ninterface IProps {\n    title: string;\n    symbol: string;\n}\n\nconst Community = ({ title, symbol }: IProps) => {\n    const { community } = useCreateCommunity({}, title, symbol);\n    return (\n        <React.Fragment>\n            <Box title={`Community Name: ${title}`} >\n                <h3 style={{ color: 'black' }} >\n                    Community Symbol: {symbol}\n                </h3>\n            </Box>\n        </React.Fragment>\n    )\n}"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AAaA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;;;;;;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;AA9BA;AAAA;AACA;AAAA;AAAA;AACA;;;;AAHA;AACA;;;AAuCA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;A","sourceRoot":""}