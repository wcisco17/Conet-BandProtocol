{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/wcisco17/Documents/romeo/conet-finished-filed/frontend/pages/index.tsx\";\nimport { BandProtocolClient } from 'band.js';\nimport * as React from 'react';\nimport { Wrapper } from '../src/components/Container';\nimport Home from '../src/models';\n\nvar a =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // const a = await bandClient.createCommunity({\n            //     name: \"Example Community\", // ERC-20 community token name\n            //     symbol: \"XEC\", // ERC-20 community token symbol\n            //     bonding: {\n            //         collateralEquation: [\"8\", \"1\", \"0\", \"2\"], // x^2\n            //         liquiditySpread: \"30000000000000000\" // 3%\n            //     },\n            //     params: {\n            //         expirationTime: \"300\", // 5 minutes\n            //         minParticipationPct: \"10000000000000000\", // 1%\n            //         supportRequiredPct: \"800000000000000000\" // 80%\n            //     }\n            // })\n            console.log(window.bandClient);\n            return _context.abrupt(\"return\", a);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function a() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar b =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return BandProtocolClient.setGraphQlAPI('https://graphql.bandprotocol.com/graphql');\n\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function b() {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nconsole.log(b(s));\nexport default (function (props) {\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Home, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/wcisco17/Documents/romeo/conet-finished-filed/frontend/pages/index.tsx"],"names":["BandProtocolClient","React","Wrapper","Home","a","console","log","window","bandClient","b","setGraphQlAPI","s","props"],"mappings":";;;AAAA,SAASA,kBAAT,QAAmC,SAAnC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,OAAOC,IAAP,MAAiB,eAAjB;;AAEA,IAAMC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG;AAAA;AAAA;AAAA;AAAA;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,YAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,UAAnB;AAjBM,6CAkBCJ,CAlBD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAADA,CAAC;AAAA;AAAA;AAAA,GAAP;;AAqBA,IAAMK,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkBT,kBAAkB,CAACU,aAAnB,CAAiC,0CAAjC,CAAlB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAADD,CAAC;AAAA;AAAA;AAAA,GAAP;;AAEAJ,OAAO,CAACC,GAAR,CAAYG,CAAC,CAACE,CAAD,CAAb;AAEA,gBAAe,UAACC,KAAD,EAAiC;AAI5C,SACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CATD","sourcesContent":["import { BandProtocolClient } from 'band.js';\nimport * as React from 'react';\nimport { Wrapper } from '../src/components/Container';\nimport Home from '../src/models';\n\nconst a = async () => {\n\n\n    // const a = await bandClient.createCommunity({\n    //     name: \"Example Community\", // ERC-20 community token name\n    //     symbol: \"XEC\", // ERC-20 community token symbol\n    //     bonding: {\n    //         collateralEquation: [\"8\", \"1\", \"0\", \"2\"], // x^2\n    //         liquiditySpread: \"30000000000000000\" // 3%\n    //     },\n    //     params: {\n    //         expirationTime: \"300\", // 5 minutes\n    //         minParticipationPct: \"10000000000000000\", // 1%\n    //         supportRequiredPct: \"800000000000000000\" // 80%\n    //     }\n    // })\n\n    console.log(window.bandClient);\n    return a\n}\n\nconst b = async () => await BandProtocolClient.setGraphQlAPI('https://graphql.bandprotocol.com/graphql')\n\nconsole.log(b(s));\n\nexport default (props: any): React.ReactNode => {\n\n\n\n    return (\n        <Wrapper>\n            <Home />\n        </Wrapper>\n    );\n}"]},"metadata":{},"sourceType":"module"}