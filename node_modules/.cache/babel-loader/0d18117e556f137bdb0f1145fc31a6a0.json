{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/wcisco17/Documents/romeo/conet-finished-filed/frontend/pages/index.tsx\";\nimport { BandProtocolClient } from 'band.js';\nimport * as React from 'react';\nimport Web3 from 'web3';\nimport { Wrapper } from '../src/components/Container';\nimport Home from '../src/models';\nvar web3 = new Web3('https://rinkeby.etherscan.io/token/0x7d534fe41a7443dcd1b62b6d843a07487f4cc4a4?a=0x5d88456389fEefD9Ad0661467F08F6d064993e23');\nconsole.log('default account: ', web3.defaultAccount);\n\nvar a =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var bandClient, a;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return BandProtocolClient.make({\n              provider: window.web3.currentProvider\n            });\n\n          case 2:\n            bandClient = _context.sent;\n            _context.next = 5;\n            return bandClient.createCommunity({\n              name: \"Example Community\",\n              // ERC-20 community token name\n              symbol: \"XEC\",\n              // ERC-20 community token symbol\n              bonding: {\n                collateralEquation: [\"8\", \"1\", \"0\", \"2\"],\n                // x^2\n                liquiditySpread: \"30000000000000000\" // 3%\n\n              },\n              params: {\n                expirationTime: \"300\",\n                // 5 minutes\n                minParticipationPct: \"10000000000000000\",\n                // 1%\n                supportRequiredPct: \"800000000000000000\" // 80%\n\n              }\n            });\n\n          case 5:\n            a = _context.sent;\n            console.log(a);\n            return _context.abrupt(\"return\", a);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function a() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nconsole.log(a());\nexport default (function (props) {\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Home, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/wcisco17/Documents/romeo/conet-finished-filed/frontend/pages/index.tsx"],"names":["BandProtocolClient","React","Web3","Wrapper","Home","web3","console","log","defaultAccount","a","make","provider","window","currentProvider","bandClient","createCommunity","name","symbol","bonding","collateralEquation","liquiditySpread","params","expirationTime","minParticipationPct","supportRequiredPct","props"],"mappings":";;;AAAA,SAASA,kBAAT,QAAmC,SAAnC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AAEA,IAAMC,IAAI,GAAG,IAAIH,IAAJ,CAAS,4HAAT,CAAb;AACAI,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,IAAI,CAACG,cAAtC;;AAEA,IAAMC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEiBT,kBAAkB,CAACU,IAAnB,CAAwB;AAAEC,cAAAA,QAAQ,EAAEC,MAAM,CAACP,IAAP,CAAYQ;AAAxB,aAAxB,CAFjB;;AAAA;AAEFC,YAAAA,UAFE;AAAA;AAAA,mBAIUA,UAAU,CAACC,eAAX,CAA2B;AACvCC,cAAAA,IAAI,EAAE,mBADiC;AACZ;AAC3BC,cAAAA,MAAM,EAAE,KAF+B;AAExB;AACfC,cAAAA,OAAO,EAAE;AACLC,gBAAAA,kBAAkB,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CADf;AACqC;AAC1CC,gBAAAA,eAAe,EAAE,mBAFZ,CAEgC;;AAFhC,eAH8B;AAOvCC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,cAAc,EAAE,KADZ;AACmB;AACvBC,gBAAAA,mBAAmB,EAAE,mBAFjB;AAEsC;AAC1CC,gBAAAA,kBAAkB,EAAE,oBAHhB,CAGqC;;AAHrC;AAP+B,aAA3B,CAJV;;AAAA;AAIAf,YAAAA,CAJA;AAkBNH,YAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AAlBM,6CAmBCA,CAnBD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA;AAAA;AAAA;AAAA,GAAP;;AAsBAH,OAAO,CAACC,GAAR,CAAYE,CAAC,EAAb;AAGA,gBAAe,UAACgB,KAAD,EAAiC;AAE5C,SACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAPD","sourcesContent":["import { BandProtocolClient } from 'band.js';\nimport * as React from 'react';\nimport Web3 from 'web3';\nimport { Wrapper } from '../src/components/Container';\nimport Home from '../src/models';\n\nconst web3 = new Web3('https://rinkeby.etherscan.io/token/0x7d534fe41a7443dcd1b62b6d843a07487f4cc4a4?a=0x5d88456389fEefD9Ad0661467F08F6d064993e23')\nconsole.log('default account: ', web3.defaultAccount);\n\nconst a = async () => {\n\n    let bandClient = await BandProtocolClient.make({ provider: window.web3.currentProvider, })\n\n    const a = await bandClient.createCommunity({\n        name: \"Example Community\", // ERC-20 community token name\n        symbol: \"XEC\", // ERC-20 community token symbol\n        bonding: {\n            collateralEquation: [\"8\", \"1\", \"0\", \"2\"], // x^2\n            liquiditySpread: \"30000000000000000\" // 3%\n        },\n        params: {\n            expirationTime: \"300\", // 5 minutes\n            minParticipationPct: \"10000000000000000\", // 1%\n            supportRequiredPct: \"800000000000000000\" // 80%\n        }\n    })\n\n    console.log(a);\n    return a\n}\n\nconsole.log(a())\n\n\nexport default (props: any): React.ReactNode => {\n\n    return (\n        <Wrapper>\n            <Home />\n        </Wrapper>\n    );\n}"]},"metadata":{},"sourceType":"module"}