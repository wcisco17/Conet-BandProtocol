{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/wcisco17/Documents/romeo/conet-finished-filed/frontend/src/models/index.tsx\";\nimport { BandProtocolClient } from 'band.js';\nimport * as React from 'react';\nimport { Fragment, useState } from 'react';\nimport { useAsyncEffect } from 'use-async-effect';\nimport { OnBoardOne, OnBoardTwo } from './Home';\n\nvar useBandClient = function useBandClient(clients) {\n  var _useState = useState(clients),\n      _useState2 = _slicedToArray(_useState, 2),\n      client = _useState2[0],\n      setClient = _useState2[1];\n\n  useAsyncEffect(\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var bandClient;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return BandProtocolClient.make({\n              provider: window.web3.currentProvider\n            });\n\n          case 2:\n            bandClient = _context.sent;\n            setClient(bandClient);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })));\n  return {\n    client: client\n  };\n};\n\nexport default (function () {\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      boarding = _useState4[0],\n      setOnboarding = _useState4[1]; // const { client } = useBandClient({})\n  // console.log(client)\n\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, boarding === 1 && React.createElement(OnBoardOne, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), boarding === 2 && React.createElement(OnBoardTwo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/wcisco17/Documents/romeo/conet-finished-filed/frontend/src/models/index.tsx"],"names":["BandProtocolClient","React","Fragment","useState","useAsyncEffect","OnBoardOne","OnBoardTwo","useBandClient","clients","client","setClient","make","provider","window","web3","currentProvider","bandClient","boarding","setOnboarding"],"mappings":";;;;AAAA,SAASA,kBAAT,QAAmC,SAAnC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,QAAvC;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD,EAAkB;AAAA,kBACRL,QAAQ,CAAqBK,OAArB,CADA;AAAA;AAAA,MAC7BC,MAD6B;AAAA,MACrBC,SADqB;;AAGpCN,EAAAA,cAAc;AAAA;AAAA;AAAA;AAAA,2BAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACcJ,kBAAkB,CAACW,IAAnB,CAAwB;AAC7CC,cAAAA,QAAQ,EAAEC,MAAM,CAACC,IAAP,CAAYC;AADuB,aAAxB,CADd;;AAAA;AACLC,YAAAA,UADK;AAKXN,YAAAA,SAAS,CAACM,UAAD,CAAT;;AALW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,GAAd;AAQA,SAAO;AACHP,IAAAA,MAAM,EAANA;AADG,GAAP;AAGH,CAdD;;AAgBA,gBAAe,YAAM;AAAA,mBACiBN,QAAQ,CAAC,CAAD,CADzB;AAAA;AAAA,MACVc,QADU;AAAA,MACAC,aADA,kBAEjB;AAEA;;;AAEA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQD,QAAQ,KAAK,CAAb,IACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHZ,EAQQA,QAAQ,KAAK,CAAb,IACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATZ,CADJ;AAeH,CArBD","sourcesContent":["import { BandProtocolClient } from 'band.js';\nimport * as React from 'react';\nimport { Fragment, useState } from 'react';\nimport { useAsyncEffect } from 'use-async-effect';\nimport { OnBoardOne, OnBoardTwo } from './Home';\n\nconst useBandClient = (clients: any) => {\n    const [client, setClient] = useState<BandProtocolClient>(clients);\n\n    useAsyncEffect(async () => {\n        const bandClient = await BandProtocolClient.make({\n            provider: window.web3.currentProvider,\n        });\n\n        setClient(bandClient);\n    });\n\n    return {\n        client,\n    }\n}\n\nexport default () => {\n    const [boarding, setOnboarding] = useState(1);\n    // const { client } = useBandClient({})\n\n    // console.log(client)\n\n    return (\n        <Fragment>\n            {\n                boarding === 1 && (\n                    <OnBoardOne />\n                )\n            }\n\n            {\n                boarding === 2 && (\n                    <OnBoardTwo />\n                )\n            }\n        </Fragment>\n    )\n}"]},"metadata":{},"sourceType":"module"}