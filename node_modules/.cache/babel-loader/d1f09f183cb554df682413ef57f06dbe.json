{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/wcisco17/Documents/romeo/conet-finished-filed/frontend/src/models/index.tsx\";\nimport { BandProtocolClient } from 'band.js';\nimport * as React from 'react';\nimport { Fragment, useState } from 'react';\nimport { useAsyncEffect } from 'use-async-effect';\nimport { OnBoardOne, OnBoardTwo } from './Home';\n\nvar useBandClient =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(clients) {\n    var _useState, _useState2, client, setClient, bandClient;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _useState = useState(clients), _useState2 = _slicedToArray(_useState, 2), client = _useState2[0], setClient = _useState2[1];\n            _context2.next = 3;\n            return BandProtocolClient.make({\n              provider: window.web3.currentProvider\n            });\n\n          case 3:\n            bandClient = _context2.sent;\n            useAsyncEffect(\n            /*#__PURE__*/\n            _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee() {\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      setClient(bandClient);\n\n                    case 1:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            })), function () {\n              [];\n            });\n            return _context2.abrupt(\"return\", {\n              client: client\n            });\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function useBandClient(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default (function () {\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      boarding = _useState4[0],\n      setOnboarding = _useState4[1];\n\n  var _useBandClient = useBandClient({}),\n      client = _useBandClient.client;\n\n  console.log(client);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, boarding === 1 && React.createElement(OnBoardOne, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), boarding === 2 && React.createElement(OnBoardTwo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/wcisco17/Documents/romeo/conet-finished-filed/frontend/src/models/index.tsx"],"names":["BandProtocolClient","React","Fragment","useState","useAsyncEffect","OnBoardOne","OnBoardTwo","useBandClient","clients","client","setClient","make","provider","window","web3","currentProvider","bandClient","boarding","setOnboarding","console","log"],"mappings":";;;;AAAA,SAASA,kBAAT,QAAmC,SAAnC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,QAAvC;;AAEA,IAAMC,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,kBAAOC,OAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACUL,QAAQ,CAACK,OAAD,CADlB,6CACXC,MADW,kBACHC,SADG;AAAA;AAAA,mBAGOV,kBAAkB,CAACW,IAAnB,CAAwB;AAC7CC,cAAAA,QAAQ,EAAEC,MAAM,CAACC,IAAP,CAAYC;AADuB,aAAxB,CAHP;;AAAA;AAGZC,YAAAA,UAHY;AAOlBZ,YAAAA,cAAc;AAAA;AAAA;AAAA;AAAA,qCAAC;AAAA;AAAA;AAAA;AAAA;AACXM,sBAAAA,SAAS,CAACM,UAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAD,IAGX,YAAM;AACL;AACH,aALa,CAAd;AAPkB,8CAcX;AACHP,cAAAA,MAAM,EAANA;AADG,aAdW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbF,aAAa;AAAA;AAAA;AAAA,GAAnB;;AAmBA,gBAAe,YAAM;AAAA,mBACiBJ,QAAQ,CAAC,CAAD,CADzB;AAAA;AAAA,MACVc,QADU;AAAA,MACAC,aADA;;AAAA,uBAEEX,aAAa,CAAC,EAAD,CAFf;AAAA,MAETE,MAFS,kBAETA,MAFS;;AAIjBU,EAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AAEA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQQ,QAAQ,KAAK,CAAb,IACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHZ,EAQQA,QAAQ,KAAK,CAAb,IACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATZ,CADJ;AAeH,CArBD","sourcesContent":["import { BandProtocolClient } from 'band.js';\nimport * as React from 'react';\nimport { Fragment, useState } from 'react';\nimport { useAsyncEffect } from 'use-async-effect';\nimport { OnBoardOne, OnBoardTwo } from './Home';\n\nconst useBandClient = async (clients: any) => {\n    const [client, setClient] = useState(clients);\n\n    const bandClient = await BandProtocolClient.make({\n        provider: window.web3.currentProvider,\n    });\n\n    useAsyncEffect(async () => {\n        setClient(bandClient);\n\n    }, () => {\n        []\n    });\n\n    return {\n        client,\n    }\n}\n\nexport default () => {\n    const [boarding, setOnboarding] = useState(1);\n    const { client } = useBandClient({})\n\n    console.log(client)\n\n    return (\n        <Fragment>\n            {\n                boarding === 1 && (\n                    <OnBoardOne />\n                )\n            }\n\n            {\n                boarding === 2 && (\n                    <OnBoardTwo />\n                )\n            }\n        </Fragment>\n    )\n}"]},"metadata":{},"sourceType":"module"}