{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/wcisco17/Documents/romeo/conet-finished-filed/frontend/pages/index.tsx\";\nimport { BandProtocolClient } from 'band.js';\nimport * as React from 'react';\nimport { Wrapper } from '../src/components/Container';\nimport Home from '../src/models';\n\nvar a =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var bandClient, buy, a;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return BandProtocolClient.make({\n              provider: window.web3.currentProvider\n            });\n\n          case 2:\n            bandClient = _context.sent;\n            _context.next = 5;\n            return bandClient.createTransferTransaction({\n              to: '0xF449b39e45B51984a37BAEB44Dd27A692232Cf75',\n              value: '1000000000000000000'\n            });\n\n          case 5:\n            buy = _context.sent;\n            console.log('BUY TOKENS', buy);\n            _context.next = 9;\n            return bandClient.createCommunity({\n              name: \"Example Community\",\n              // ERC-20 community token name\n              symbol: \"XEC\",\n              // ERC-20 community token symbol\n              bonding: {\n                collateralEquation: [\"8\", \"1\", \"0\", \"2\"],\n                // x^2\n                liquiditySpread: \"30000000000000000\" // 3%\n\n              },\n              params: {\n                expirationTime: \"300\",\n                // 5 minutes\n                minParticipationPct: \"10000000000000000\",\n                // 1%\n                supportRequiredPct: \"800000000000000000\" // 80%\n\n              }\n            });\n\n          case 9:\n            a = _context.sent;\n            console.log('INSIDE FUNCTION A ', a);\n            return _context.abrupt(\"return\", a);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function a() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nconsole.log('A FUNCTION', a());\na().then(function (r) {\n  console.log('INSIDE R: ', r);\n});\nexport default (function (props) {\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Home, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/wcisco17/Documents/romeo/conet-finished-filed/frontend/pages/index.tsx"],"names":["BandProtocolClient","React","Wrapper","Home","a","make","provider","window","web3","currentProvider","bandClient","createTransferTransaction","to","value","buy","console","log","createCommunity","name","symbol","bonding","collateralEquation","liquiditySpread","params","expirationTime","minParticipationPct","supportRequiredPct","then","r","props"],"mappings":";;;AAAA,SAASA,kBAAT,QAAmC,SAAnC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,OAAOC,IAAP,MAAiB,eAAjB;;AAEA,IAAMC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEiBJ,kBAAkB,CAACK,IAAnB,CAAwB;AAAEC,cAAAA,QAAQ,EAAEC,MAAM,CAACC,IAAP,CAAYC;AAAxB,aAAxB,CAFjB;;AAAA;AAEFC,YAAAA,UAFE;AAAA;AAAA,mBAIYA,UAAU,CAACC,yBAAX,CAAqC;AACnDC,cAAAA,EAAE,EAAE,4CAD+C;AAEnDC,cAAAA,KAAK,EAAE;AAF4C,aAArC,CAJZ;;AAAA;AAIAC,YAAAA,GAJA;AASNC,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,GAA1B;AATM;AAAA,mBAYUJ,UAAU,CAACO,eAAX,CAA2B;AACvCC,cAAAA,IAAI,EAAE,mBADiC;AACZ;AAC3BC,cAAAA,MAAM,EAAE,KAF+B;AAExB;AACfC,cAAAA,OAAO,EAAE;AACLC,gBAAAA,kBAAkB,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CADf;AACqC;AAC1CC,gBAAAA,eAAe,EAAE,mBAFZ,CAEgC;;AAFhC,eAH8B;AAOvCC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,cAAc,EAAE,KADZ;AACmB;AACvBC,gBAAAA,mBAAmB,EAAE,mBAFjB;AAEsC;AAC1CC,gBAAAA,kBAAkB,EAAE,oBAHhB,CAGqC;;AAHrC;AAP+B,aAA3B,CAZV;;AAAA;AAYAtB,YAAAA,CAZA;AA0BNW,YAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCZ,CAAlC;AA1BM,6CA4BCA,CA5BD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA;AAAA;AAAA;AAAA,GAAP;;AA+BAW,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BZ,CAAC,EAA3B;AAEAA,CAAC,GAAGuB,IAAJ,CAAS,UAACC,CAAD,EAAO;AACZb,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BY,CAA1B;AACH,CAFD;AAOA,gBAAe,UAACC,KAAD,EAAiC;AAE5C,SACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAPD","sourcesContent":["import { BandProtocolClient } from 'band.js';\nimport * as React from 'react';\nimport { Wrapper } from '../src/components/Container';\nimport Home from '../src/models';\n\nconst a = async () => {\n\n    let bandClient = await BandProtocolClient.make({ provider: window.web3.currentProvider, })\n\n    const buy = await bandClient.createTransferTransaction({\n        to: '0xF449b39e45B51984a37BAEB44Dd27A692232Cf75',\n        value: '1000000000000000000'\n    })\n\n    console.log('BUY TOKENS', buy);\n\n\n    const a = await bandClient.createCommunity({\n        name: \"Example Community\", // ERC-20 community token name\n        symbol: \"XEC\", // ERC-20 community token symbol\n        bonding: {\n            collateralEquation: [\"8\", \"1\", \"0\", \"2\"], // x^2\n            liquiditySpread: \"30000000000000000\" // 3%\n        },\n        params: {\n            expirationTime: \"300\", // 5 minutes\n            minParticipationPct: \"10000000000000000\", // 1%\n            supportRequiredPct: \"800000000000000000\" // 80%\n        }\n    })\n\n    console.log('INSIDE FUNCTION A ', a);\n\n    return a\n}\n\nconsole.log('A FUNCTION', a());\n\na().then((r) => {\n    console.log('INSIDE R: ', r)\n})\n\n\n\n\nexport default (props: any): React.ReactNode => {\n\n    return (\n        <Wrapper>\n            <Home />\n        </Wrapper>\n    );\n}"]},"metadata":{},"sourceType":"module"}