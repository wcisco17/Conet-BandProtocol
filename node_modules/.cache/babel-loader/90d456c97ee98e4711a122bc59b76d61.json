{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/wcisco17/Documents/romeo/conet-finished-filed/frontend/pages/index.tsx\";\nimport { BandProtocolClient } from 'band.js';\nimport * as React from 'react';\nimport { Wrapper } from '../src/components/Container';\nimport Home from '../src/models';\nvar isClient = typeof window !== 'undefined';\n\nvar a =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var ab, bandClient, a;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return BandProtocolClient.setAPI('https://api-wip.rinkeby.bandprotocol.com');\n\n          case 2:\n            ab = _context.sent;\n            console.log('CLIENT', ab);\n            _context.next = 6;\n            return BandProtocolClient.make({\n              provider: window.web3.currentProvider\n            });\n\n          case 6:\n            bandClient = _context.sent;\n            _context.next = 9;\n            return bandClient.createCommunity({\n              name: \"Example Community\",\n              // ERC-20 community token name\n              symbol: \"XEC\",\n              // ERC-20 community token symbol\n              bonding: {\n                collateralEquation: [\"8\", \"1\", \"0\", \"2\"],\n                // x^2\n                liquiditySpread: \"30000000000000000\" // 3%\n\n              },\n              params: {\n                expirationTime: \"300\",\n                // 5 minutes\n                minParticipationPct: \"10000000000000000\",\n                // 1%\n                supportRequiredPct: \"800000000000000000\" // 80%\n\n              }\n            });\n\n          case 9:\n            a = _context.sent;\n            console.log(a);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function a() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default (function (props) {\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Home, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n}); // (window).BandProtocolClient = BandProtocolClient\n// (window).IPFS = IPFS\n// (window).bandInit = async () => {\n//     (window).BandProtocolClient.setAPI('https://api-wip.rinkeby.bandprotocol.com')\n//     (window).web4 = new Web3((window).web3.currentProvider)\n//     (window).bandClient = await BandProtocolClient.make({\n//         provider: (window).web4.currentProvider,\n//     })\n// }","map":{"version":3,"sources":["/Users/wcisco17/Documents/romeo/conet-finished-filed/frontend/pages/index.tsx"],"names":["BandProtocolClient","React","Wrapper","Home","isClient","window","a","setAPI","ab","console","log","make","provider","web3","currentProvider","bandClient","createCommunity","name","symbol","bonding","collateralEquation","liquiditySpread","params","expirationTime","minParticipationPct","supportRequiredPct","props"],"mappings":";;;AAAA,SAASA,kBAAT,QAAmC,SAAnC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,IAAMC,QAAQ,GAAG,OAAOC,MAAP,KAAkB,WAAnC;;AAEA,IAAMC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACWN,kBAAkB,CAACO,MAAnB,CAA0B,0CAA1B,CADX;;AAAA;AACAC,YAAAA,EADA;AAENC,YAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,EAAtB;AAFM;AAAA,mBAIiBR,kBAAkB,CAACW,IAAnB,CAAwB;AAAEC,cAAAA,QAAQ,EAAEP,MAAM,CAACQ,IAAP,CAAYC;AAAxB,aAAxB,CAJjB;;AAAA;AAIFC,YAAAA,UAJE;AAAA;AAAA,mBAMUA,UAAU,CAACC,eAAX,CAA2B;AACvCC,cAAAA,IAAI,EAAE,mBADiC;AACZ;AAC3BC,cAAAA,MAAM,EAAE,KAF+B;AAExB;AACfC,cAAAA,OAAO,EAAE;AACLC,gBAAAA,kBAAkB,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CADf;AACqC;AAC1CC,gBAAAA,eAAe,EAAE,mBAFZ,CAEgC;;AAFhC,eAH8B;AAOvCC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,cAAc,EAAE,KADZ;AACmB;AACvBC,gBAAAA,mBAAmB,EAAE,mBAFjB;AAEsC;AAC1CC,gBAAAA,kBAAkB,EAAE,oBAHhB,CAGqC;;AAHrC;AAP+B,aAA3B,CANV;;AAAA;AAMAnB,YAAAA,CANA;AAmBNG,YAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ;;AAnBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA;AAAA;AAAA;AAAA,GAAP;;AAuBA,gBAAe,UAACoB,KAAD,EAAiC;AAE5C,SACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAPD,E,CASA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { BandProtocolClient } from 'band.js';\nimport * as React from 'react';\nimport { Wrapper } from '../src/components/Container';\nimport Home from '../src/models';\nconst isClient = typeof window !== 'undefined'\n\nconst a = async () => {\n    const ab = await BandProtocolClient.setAPI('https://api-wip.rinkeby.bandprotocol.com')\n    console.log('CLIENT', ab);\n\n    let bandClient = await BandProtocolClient.make({ provider: window.web3.currentProvider, })\n\n    const a = await bandClient.createCommunity({\n        name: \"Example Community\", // ERC-20 community token name\n        symbol: \"XEC\", // ERC-20 community token symbol\n        bonding: {\n            collateralEquation: [\"8\", \"1\", \"0\", \"2\"], // x^2\n            liquiditySpread: \"30000000000000000\" // 3%\n        },\n        params: {\n            expirationTime: \"300\", // 5 minutes\n            minParticipationPct: \"10000000000000000\", // 1%\n            supportRequiredPct: \"800000000000000000\" // 80%\n        }\n    })\n    console.log(a);\n}\n\n\nexport default (props: any): React.ReactNode => {\n\n    return (\n        <Wrapper>\n            <Home />\n        </Wrapper>\n    );\n}\n\n// (window).BandProtocolClient = BandProtocolClient\n// (window).IPFS = IPFS\n\n// (window).bandInit = async () => {\n//     (window).BandProtocolClient.setAPI('https://api-wip.rinkeby.bandprotocol.com')\n//     (window).web4 = new Web3((window).web3.currentProvider)\n//     (window).bandClient = await BandProtocolClient.make({\n//         provider: (window).web4.currentProvider,\n//     })\n// }"]},"metadata":{},"sourceType":"module"}