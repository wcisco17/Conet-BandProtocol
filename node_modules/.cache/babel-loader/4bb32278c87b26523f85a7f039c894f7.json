{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/wcisco17/Documents/romeo/conet-finished-filed/frontend/src/models/index.tsx\";\nimport { BandProtocolClient } from 'band.js';\nimport * as React from 'react';\nimport { Fragment, useEffect, useState } from 'react'; // import * as Web3 from 'web3';\n\nimport { OnBoardOne, OnBoardTwo } from './Home'; // const web3 = new Web3.default('http://127.0.0.1:7545');\n// web3.setProvider('http://127.0.0.1:7545')\n\nvar useBandClient = function useBandClient(clients) {\n  var _useState = useState(clients),\n      _useState2 = _slicedToArray(_useState, 2),\n      client = _useState2[0],\n      setClient = _useState2[1];\n\n  useEffect(function () {\n    loadBandProtocol();\n  }, []);\n\n  var loadBandProtocol =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var bandClient;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return BandProtocolClient.make({\n                provider: window.web3.currentProvider\n              });\n\n            case 2:\n              bandClient = _context.sent;\n              setClient(bandClient);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadBandProtocol() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return {\n    client: client\n  };\n};\n\nvar useCreateCommunity = function useCreateCommunity(communities) {\n  var _useBandClient = useBandClient(communities),\n      createCommunity = _useBandClient.client.createCommunity;\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      community = _useState4[0],\n      setCommunity = _useState4[1];\n\n  useEffect(function () {\n    loadBandProtocol();\n  }, []);\n\n  var loadBandProtocol =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var communityClient;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return createCommunity({\n                name: \"Example Community\",\n                // ERC-20 community token name\n                symbol: \"XEC\",\n                // ERC-20 community token symbol\n                bonding: {\n                  collateralEquation: [\"8\", \"1\", \"0\", \"2\"],\n                  // x^2\n                  liquiditySpread: \"30000000000000000\" // 3%\n\n                },\n                params: {\n                  expirationTime: \"300\",\n                  // 5 minutes\n                  minParticipationPct: \"10000000000000000\",\n                  // 1%\n                  supportRequiredPct: \"800000000000000000\" // 80%\n\n                }\n              });\n\n            case 2:\n              communityClient = _context2.sent;\n              setCommunity(communityClient);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadBandProtocol() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return {\n    community: community\n  };\n};\n\nexport default (function () {\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      boarding = _useState6[0],\n      setOnboarding = _useState6[1];\n\n  var _useCreateCommunity = useCreateCommunity({}),\n      community = _useCreateCommunity.community;\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, boarding === 1 && React.createElement(OnBoardOne, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), boarding === 2 && React.createElement(OnBoardTwo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/wcisco17/Documents/romeo/conet-finished-filed/frontend/src/models/index.tsx"],"names":["BandProtocolClient","React","Fragment","useEffect","useState","OnBoardOne","OnBoardTwo","useBandClient","clients","client","setClient","loadBandProtocol","make","provider","window","web3","currentProvider","bandClient","useCreateCommunity","communities","createCommunity","community","setCommunity","name","symbol","bonding","collateralEquation","liquiditySpread","params","expirationTime","minParticipationPct","supportRequiredPct","communityClient","boarding","setOnboarding"],"mappings":"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","sourcesContent":["import { BandProtocolClient } from 'band.js';\nimport * as React from 'react';\nimport { Fragment, useEffect, useState } from 'react';\n// import * as Web3 from 'web3';\nimport { OnBoardOne, OnBoardTwo } from './Home';\n\n// const web3 = new Web3.default('http://127.0.0.1:7545');\n\n// web3.setProvider('http://127.0.0.1:7545')\n\nconst useBandClient = (clients: any) => {\n    const [client, setClient] = useState<BandProtocolClient>(clients);\n\n    useEffect(() => {\n        loadBandProtocol()\n    }, []);\n\n    const loadBandProtocol = async () => {\n        const bandClient = await BandProtocolClient.make({ provider: window.web3.currentProvider, });\n        setClient(bandClient);\n    }\n\n    return {\n        client,\n    }\n}\n\nconst useCreateCommunity = (communities: any) => {\n    const { client: { createCommunity } } = useBandClient(communities);\n\n    const [community, setCommunity] = useState();\n\n    useEffect(() => {\n        loadBandProtocol()\n    }, []);\n\n    const loadBandProtocol = async () => {\n        const communityClient = await createCommunity({\n            name: \"Example Community\", // ERC-20 community token name\n            symbol: \"XEC\", // ERC-20 community token symbol\n            bonding: {\n                collateralEquation: [\"8\", \"1\", \"0\", \"2\"], // x^2\n                liquiditySpread: \"30000000000000000\" // 3%\n            },\n            params: {\n                expirationTime: \"300\", // 5 minutes\n                minParticipationPct: \"10000000000000000\", // 1%\n                supportRequiredPct: \"800000000000000000\" // 80%\n            }\n        })\n        setCommunity(communityClient);\n    }\n\n    return {\n        community\n    }\n}\n\nexport default () => {\n    const [boarding, setOnboarding] = useState(1);\n    const { community } = useCreateCommunity({});\n\n    return (\n        <Fragment>\n            {\n                boarding === 1 && (\n                    <OnBoardOne />\n                )\n            }\n\n            {\n                boarding === 2 && (\n                    <OnBoardTwo />\n                )\n            }\n        </Fragment>\n    )\n}"]},"metadata":{},"sourceType":"module"}