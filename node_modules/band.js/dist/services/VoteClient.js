var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import BN from 'bn.js';
import InternalUtils from './InternalUtils';
import BaseClient from './BaseClient';
var VoteClient = /** @class */ (function (_super) {
    __extends(VoteClient, _super);
    function VoteClient(sendAddress, web3) {
        var _this = _super.call(this, web3) || this;
        _this.sendAddress = sendAddress;
        return _this;
    }
    // can't use in feeless
    VoteClient.prototype.createCastVoteTransaction = function (onChainId, yesVote, noVote) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, to, data, nonce, _b, _c, _d;
            return __generator(this, function (_e) {
                switch (_e.label) {
                    case 0:
                        _b = this.postRequestVote;
                        _c = ["/" + onChainId + "/castvote"];
                        _d = {};
                        return [4 /*yield*/, this.getAccount()];
                    case 1: return [4 /*yield*/, _b.apply(this, _c.concat([(_d.sender = _e.sent(),
                                _d.yesVote = BN.isBN(yesVote) ? yesVote.toString() : yesVote,
                                _d.noVote = BN.isBN(noVote) ? noVote.toString() : noVote,
                                _d)]))];
                    case 2:
                        _a = _e.sent(), to = _a.to, data = _a.data, nonce = _a.nonce;
                        return [2 /*return*/, this.createTransaction(to, data, true, nonce)];
                }
            });
        });
    };
    VoteClient.prototype.createCommitVoteTransaction = function (onChainId, commitHash, totalWeight) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, to, data, nonce, _b, _c, _d;
            return __generator(this, function (_e) {
                switch (_e.label) {
                    case 0:
                        if (this.web3 === undefined) {
                            return [2 /*return*/, InternalUtils.throw('Required provider.')];
                        }
                        _b = this.postRequestVote;
                        _c = ["/" + onChainId + "/commitvote"];
                        _d = {};
                        return [4 /*yield*/, this.getAccount()];
                    case 1: return [4 /*yield*/, _b.apply(this, _c.concat([(_d.sender = _e.sent(),
                                _d.commitHash = commitHash,
                                _d.totalWeight = BN.isBN(totalWeight)
                                    ? totalWeight.toString()
                                    : totalWeight,
                                _d)]))];
                    case 2:
                        _a = _e.sent(), to = _a.to, data = _a.data, nonce = _a.nonce;
                        return [2 /*return*/, this.createTransaction(to, data, true, nonce)];
                }
            });
        });
    };
    VoteClient.prototype.createRevealVoteTransaction = function (onChainId, yesVote, noVote, salt) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, to, data, _b, _c, _d;
            return __generator(this, function (_e) {
                switch (_e.label) {
                    case 0:
                        _b = this.postRequestVote;
                        _c = ["/" + onChainId + "/revealvote"];
                        _d = {};
                        return [4 /*yield*/, this.getAccount()];
                    case 1: return [4 /*yield*/, _b.apply(this, _c.concat([(_d.sender = _e.sent(),
                                _d.yesVote = BN.isBN(yesVote) ? yesVote.toString() : yesVote,
                                _d.noVote = BN.isBN(noVote) ? noVote.toString() : noVote,
                                _d.salt = BN.isBN(salt) ? salt.toString() : salt,
                                _d)]))];
                    case 2:
                        _a = _e.sent(), to = _a.to, data = _a.data;
                        return [2 /*return*/, this.createTransaction(to, data, false)];
                }
            });
        });
    };
    VoteClient.prototype.getVotes = function (voter, pollIds) {
        return __awaiter(this, void 0, void 0, function () {
            var result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getRequestVote('/votes', {
                            voter: voter,
                            pollId: pollIds,
                        })];
                    case 1:
                        result = _a.sent();
                        return [2 /*return*/, result.map(function (e) { return (__assign({}, e, { yesWeight: e.yesWeight && new BN(e.yesWeight), noWeight: e.noWeight && new BN(e.noWeight) })); })];
                }
            });
        });
    };
    VoteClient.prototype.getVotesQL = function (voter, pollIds) {
        return __awaiter(this, void 0, void 0, function () {
            var tcr, challenges;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        // TODO : add filter
                        console.log(voter, pollIds);
                        return [4 /*yield*/, InternalUtils.graphqlRequest("\n      {\n        tcr(address:\"" + this.sendAddress + "\") {\n          challenges {\n            onChainId\n            poll {\n              votes {\n                voter {\n                  address\n                }\n                totalWeight\n                yesWeight\n                noWeight\n              }\n            }\n          }\n        }\n      }\n    ")];
                    case 1:
                        tcr = (_a.sent()).tcr;
                        challenges = tcr.challenges;
                        return [2 /*return*/, challenges.reduce(function (acc, challenge) {
                                return acc.concat(challenge.poll.votes.map(function (vote) { return ({
                                    onChainId: challenge.onChainId,
                                    voter: vote.voter.address,
                                    totalWeight: vote.totalWeight,
                                    yesWeight: vote.yesWeight,
                                    noWeight: vote.noWeight,
                                }); }));
                            }, [])];
                }
            });
        });
    };
    VoteClient.prototype.getVotingPower = function (pollId) {
        return __awaiter(this, void 0, void 0, function () {
            var result, _a, _b;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        _a = this.getRequestVote;
                        _b = "/" + pollId + "/voting-power/";
                        return [4 /*yield*/, this.getAccount()];
                    case 1: return [4 /*yield*/, _a.apply(this, [_b + (_c.sent()),
                            {}])];
                    case 2:
                        result = _c.sent();
                        return [2 /*return*/, new BN(result.votingPower)];
                }
            });
        });
    };
    VoteClient.prototype.getRequestVote = function (path, params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, InternalUtils.getRequest("/voting/" + this.sendAddress + path, params)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    VoteClient.prototype.postRequestVote = function (path, data) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, InternalUtils.postRequest("/voting/" + this.sendAddress + path, data)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return VoteClient;
}(BaseClient));
export default VoteClient;
